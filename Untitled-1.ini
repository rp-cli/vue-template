hash是在url上拼接/#url/，刷新页面不会有影响
history是直接改变url，刷新页面会有影响

对象查找自身属性时，如果找不到，就会通过_proto去构造函数的prototype上查找

箭头函数和普通函数的区别
没有自己的作用域，继承上层作用域的this，没有arguments

new操作符
创建一个对象
将改对象的_proto指向该函数的prototype

eventLoop
js是单线程，eventloop 宏任务和微任务 js在执行完所有同步任务后回去检查有没有微任务，如果有就先执行完，然后再去检查宏任务，执行完一个宏任务后再去检查微任务

输入一个url
dns解析，找到对应ip
三次握手四次挥手建立连接
从服务器请求资源 https
请求到html
dom tree，cssom tree  
render Tree
js 加载 加载完之后渲染页面

document.ready 和 DOMContentLoaded dom加载完毕
window.onload所有资源加载完毕

回流  位置或者大小发生发生改变
重绘  样式发生改变 重新绘制

js加载方式  defer  async

async 先加载完先执行
defer 一定是按照加载的顺序来

css加载不堵塞，构建堵塞
js加载和执行都堵塞，如果用defer是异步加载，等dom构建完执行，async也是异步加载，但是加载完就执行  

性能优化
cdn
http缓存
webpack构建 

react组件传值
父子组件传值
兄弟组件传值，可以让父组件来传
context                   
redux

水平垂直居中

flex: 1   flex-grow: 1  flex-shrink: 1  flex-basis: 0%
剩余空间占多少
压缩多少
算完flex-basis再根据剩余空间来分配，有剩余按照flex-grow，长度不够按照flex-shrink（flex-basis不是auto的时候会覆盖width，是auto的时候则是width生效）

border-box  标准盒模型  content = padding + 内容
content-box  content = 内容

什么是跨域
一个域名分为  https://www.baidu.com:8080/xxx.json
协议 子域名 主域名 端口号  资源地址
跨域方法：
跨域并不是请求发不出去，请求能发出去，服务端能收到请求并正常返回结果，只是结果被浏览器拦截了。
所以一些像表单提交（写入操作，比如表单提交，或者是资源嵌入，比如jsonp用的script）就可以跨域，因为不用获取新的内容，ajax就会跨域，因为归根结底，跨域是为了阻止用户读取到另一个域名下的内容，Ajax 可以获取响应，浏览器认为这不安全，所以拦截了响应。

csrf其实就是一个跨域请求，但是他攻击你访问过的网站能带上对应的cookie，一般就是表单提交资源嵌入
大概过程就是：1.登陆www.A.com，浏览器有了cookie
            2.不小心访问了危险网站www.B.com,然后B发了一个请求给A，你这个请求的域名是www.A.com/xxxx，就是同源，所以能拿到A的cookie，然后就炸开了

cookie的同源策略  只要你请求某个域名，就会带上某个域名的cookie，可以用samesite去限制（就是跨域请求的时候不会带上cookie）

cookie属性 domain path http-only secure samesite  expires/max-age  name value

跨域 csrf cookie 彻底懂了 牛逼

jsonp 就是js手动生成一个script标签，src标签写入对应的接口，理论上就是拼接上一个callback，然后后端返回执行回调的内容，前端就会执行然后后端执行函数时的参数，前端就可以拿到
代理  webpack proxy
nginx
cors 服务器设置相应头  Access-Control-Allow-Origin   允许访问的域名
Access-Control-Allow-Method  允许访问的方法
Access-Control-Allow-Credentials  允许携带cookie
Access-Control-Max-Age  预检的存活时间
Access-Control-Allow-Headers  允许哪个头访问我
Access-Control-Expose-Headers  允许返回的头
postMessage

http有哪些请求 get post put delete head   
get和post的区别  get不安全，有大小限制
    常见状态码  get一般会有缓存，因为它是去服务器获取东西
    post不会有，因为它是去服务器改东西，缓存也没有意义

http缓存
强缓存和协商缓存
强缓存 看服务器返回的是expires/cache-control（max-age）

协商缓存   last-modified/if-modified-since
          etag/if-none-match
          3xx 重定向  304协商缓存  没有更新
          4xx  400 客户端请求报文有语法错误  401 需要有通过 HTTP 认证  403 禁止访问   404 找不到  405 不允许使用改方法访问  access-control-allow-Methods
          500 服务端报错
web安全  csrf token  cookie samesite 
